plugins {
    id 'com.github.johnrengelman.shadow'
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:$rootProject.fabric_api_version"

    modImplementation "dev.architectury:architectury-fabric:$rootProject.architectury_api_version"
    modImplementation "curse.maven:jade-324717:${jade_fabric_version_id}"

    // include(modImplementation("maven.modrinth:spiritapi-fabric:${spiritapi_fabric_version_id}"))
    include(modImplementation("com.jship.spiritapi:spiritapi-fabric:1.0.0-1.21.5"))

    modImplementation "dev.isxander:yet-another-config-lib:${yacl_version}-fabric"
    modImplementation "com.terraformersmc:modmenu:${modmenu_version}"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionFabric')
}

processResources {
    inputs.property 'version', project.version

    filesMatching('fabric.mod.json') {
        expand version: project.version
    }
}

loom {
    runs {
        datagen {
            inherit client
            "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${project(":common").file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.modid=basic_fluid_hopper"
            runDir "build/datagen"
        }
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}

publishMods {
    file = remapJar.archiveFile
    changelog = file("../CHANGELOG.md").getText()
    type = BETA
    modLoaders.add("fabric")

    modrinth {
        projectId = "P5cDzldd"
        accessToken = providers.environmentVariable("MODRINTH_TOKEN")

        minecraftVersions.add("${minecraft_version}")

        requires("architectury-api")
        requires("yacl")
        optional("jade")
        // embeds("spirit-api")

        announcementTitle = "Fabric version on Modrinth"
    }

    curseforge {
        projectId = "1059393"
        projectSlug = "basic-fluid-hopper"
        accessToken = providers.environmentVariable("CURSEFORGE_TOKEN")
        
        minecraftVersions.add("${minecraft_version}")
        javaVersions.add(JavaVersion.VERSION_21)

        requires("architectury-api")
        requires("yacl")
        optional("jade")
        // embeds("spirit-api")

        announcementTitle = "Fabric version on Curseforge"
    }
}