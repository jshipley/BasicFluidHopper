plugins {
    id 'com.github.johnrengelman.shadow'
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
    maven {
        name "KotlinForForge"
        url "https://thedarkcolour.github.io/KotlinForForge/"
    }
}

dependencies {
    neoForge "net.neoforged:neoforge:$rootProject.neoforge_version"

    modImplementation "dev.architectury:architectury-neoforge:$rootProject.architectury_api_version"

    include(modImplementation("maven.modrinth:spiritapi-fabric:${spiritapi_neoforge_version_id}"))

    implementation("dev.isxander:yet-another-config-lib:${yacl_version}-neoforge") {
        exclude group: "net.neoforged.fancymodloader", module: "loader"
    }

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/neoforge.mods.toml') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}

publishMods {
    file = remapJar.archiveFile
    changelog = file("../CHANGELOG.md").getText()
    type = BETA
    modLoaders.add("neoforge")

    modrinth {
        projectId = "P5cDzldd"
        accessToken = providers.environmentVariable("MODRINTH_TOKEN")

        minecraftVersions.add("${minecraft_version}")

        requires("architectury-api")
        requires("yacl")
        optional("jade")
        embeds("spirit-api")

        announcementTitle = "Neoforge version on Modrinth"
    }

    curseforge {
        projectId = "1059393"
        projectSlug = "basic-fluid-hopper"
        accessToken = providers.environmentVariable("CURSEFORGE_TOKEN")
        
        minecraftVersions.add(${minecraft_version})
        javaVersions.add(JavaVersion.VERSION_21)

        requires("architectury-api")
        requires("yacl")
        optional("jade")
        embeds("spirit-api")

        announcementTitle = "Neoforge version on Curseforge"
    }
}
